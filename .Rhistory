??wilcoxonPairedR
source("ProductionData_randsubj.R")
mytheme <- theme(strip.text.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_text(),
axis.text.y = element_text(size=7),
axis.ticks.x = element_blank(),
legend.text = element_text(),
legend.title = element_text(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(0.,"lines")
)
figS1a <- ggplot(vmscount
%>% filter(month==10 & month_chron==10),
aes(subj,
y=n, fill = Consonant,
linetype=VMSgroup))  +
geom_col(lwd = .3, color = "black") +
facet_grid(month_chron~subj, scales = "free")+
xlab("Individual Subjects") +
ylab("n tokens") +
scale_y_continuous(breaks = c(0, 20, 50, 200, 400)) +
scale_linetype_manual(values = c(0,1))+
theme_bw()+
mytheme+
labs(linetype = "VMS") +
geom_hline(yintercept = 20, linetype = 2, colour = "grey27") +
geom_hline(yintercept = 50, linetype = 4, colour = "grey27")
plot(figS1a)
figS1a <- ggplot(vmscount
%>% filter(month==10 & month_chron==10),
aes(subj,
y=n, fill = Consonant,
linetype=VMSgroup))  +
geom_col(lwd = .3, color = "black") +
facet_grid(month_chron~subj, scales = "free")+
scale_colour_discrete(breaks = c("p", "t", "k", "m", "n"), guide = F) +
xlab("Individual Subjects") +
ylab("n tokens") +
scale_y_continuous(breaks = c(0, 20, 50, 200, 400)) +
scale_linetype_manual(values = c(0,1))+
theme_bw()+
mytheme+
labs(linetype = "VMS") +
geom_hline(yintercept = 20, linetype = 2, colour = "grey27") +
geom_hline(yintercept = 50, linetype = 4, colour = "grey27")
plot(figS1a)
%>% filter(month==10 & month_chron==10),
figS1a <- ggplot(vmscount
%>% filter(month==10 & month_chron==10),
aes(subj,
y=n, fill = Consonant,
linetype=VMSgroup))  +
geom_col(lwd = .3, color = "black") +
facet_grid(month_chron~subj, scales = "free")+
scale_colour_discrete(breaks = c("p", "t", "k", "m", "n"), guide = F) +
xlab("Individual Subjects") +
ylab("n tokens") +
scale_y_continuous(breaks = c(0, 20, 50, 200, 400)) +
scale_linetype_manual(values = c(0,1))+
theme_bw()+
mytheme+
labs(linetype = "VMS") +
geom_hline(yintercept = 20, linetype = 2, colour = "grey27") +
geom_hline(yintercept = 50, linetype = 4, colour = "grey27")
plot(figS1a)
%>% filter(month==10 & month_chron==10),
figS1a <- ggplot(vmscount
%>% filter(month==10 & month_chron==10),
aes(subj,
y=n, fill = Consonant,
linetype=VMSgroup))  +
geom_col(lwd = .3, color = "black") +
facet_grid(month_chron~subj, scales = "free")+
scale_colour_discrete(breaks = c("p", "t", "k", "m", "n")) +
xlab("Individual Subjects") +
ylab("n tokens") +
scale_y_continuous(breaks = c(0, 20, 50, 200, 400)) +
scale_linetype_manual(values = c(0,1))+
theme_bw()+
mytheme+
labs(linetype = "VMS") +
geom_hline(yintercept = 20, linetype = 2, colour = "grey27") +
geom_hline(yintercept = 50, linetype = 4, colour = "grey27")
plot(figS1a)
%>% filter(month==10 & month_chron==10),
figS1a <- ggplot(vmscount
%>% filter(month==10 & month_chron==10),
aes(subj,
y=n, fill = Consonant,
linetype=VMSgroup))  +
geom_col(lwd = .3, color = "black") +
facet_grid(month_chron~subj, scales = "free")+
scale_fill_discrete(breaks = c("p", "t", "k", "m", "n")) +
xlab("Individual Subjects") +
ylab("n tokens") +
scale_y_continuous(breaks = c(0, 20, 50, 200, 400)) +
scale_linetype_manual(values = c(0,1))+
theme_bw()+
mytheme+
labs(linetype = "VMS") +
geom_hline(yintercept = 20, linetype = 2, colour = "grey27") +
geom_hline(yintercept = 50, linetype = 4, colour = "grey27")
plot(figS1a)
figS1b <- ggplot(vmscount
%>% filter(month==11),
aes(subj,
y=n, fill = Consonant,
linetype=VMSgroup))  +
geom_col(lwd = .3, color = "black") +
facet_grid(month_chron~subj, scales = "free")+
scale_fill_discrete(breaks = c("p", "t", "k", "m", "n"), guide = F) +
xlab("Individual Subjects") +
ylab("n tokens") +
scale_y_continuous(breaks = c(0, 20, 50, 200, 400)) +
scale_linetype_manual(values = c(0,1))+
theme_bw()+
mytheme+
labs(linetype = "VMS") +
geom_hline(yintercept = 20, linetype = 2, colour = "grey27") +
geom_hline(yintercept = 50, linetype = 4, colour = "grey27")
plot(figS1b)
library(tidyverse)
source("ProductionData_randsubj.R")
mytheme <- theme(strip.text.x = element_blank(),
axis.text.x  = element_blank(),
axis.title.y = element_text(),
axis.text.y = element_text(size=7),
axis.ticks.x = element_blank(),
legend.text = element_text(),
legend.title = element_text(),
panel.grid = element_blank(),
panel.border = element_blank(),
panel.spacing.x = unit(0.,"lines")
)
figS1a <- ggplot(vmscount
%>% filter(month==10 & month_chron==10),
aes(subj,
y=n, fill = Consonant,
linetype=VMSgroup))  +
geom_col(lwd = .3, color = "black") +
facet_grid(month_chron~subj, scales = "free")+
scale_fill_discrete(breaks = c("p", "t", "k", "m", "n")) +
xlab("Individual Subjects") +
ylab("n tokens") +
scale_y_continuous(breaks = c(0, 20, 50, 200, 400)) +
scale_linetype_manual(values = c(0,1))+
theme_bw()+
mytheme+
labs(linetype = "VMS") +
geom_hline(yintercept = 20, linetype = 2, colour = "grey27") +
geom_hline(yintercept = 50, linetype = 4, colour = "grey27")
plot(figS1a)
figS1b <- ggplot(vmscount
%>% filter(month==11),
aes(subj,
y=n, fill = Consonant,
linetype=VMSgroup))  +
geom_col(lwd = .3, color = "black") +
facet_grid(month_chron~subj, scales = "free")+
scale_fill_discrete(breaks = c("p", "t", "k", "m", "n"), guide = F) +
xlab("Individual Subjects") +
ylab("n tokens") +
scale_y_continuous(breaks = c(0, 20, 50, 200, 400)) +
scale_linetype_manual(values = c(0,1))+
theme_bw()+
mytheme+
labs(linetype = "VMS") +
geom_hline(yintercept = 20, linetype = 2, colour = "grey27") +
geom_hline(yintercept = 50, linetype = 4, colour = "grey27")
plot(figS1b)
library(tidyverse)
source("ProductionData_randsubj.R")
View(vmscount)
vmscount %>%
group_by(subj, VMSgroup, month_chron, n) %>%
filter(subj %in% vms_subset2$subj &
month_chron == 11 &
n < 50 & n >19 &
inREP == T) %>%
#view()
ungroup() %>%
group_by(subj) %>%
tally()   # 3 infants, 279, 129, 268
toexclude <- vmscount %>%
group_by(subj, VMSgroup, month_chron, n) %>%
filter(subj %in% vms_subset2$subj &
month_chron == 11 &
n < 50 & n >19 &
inREP == T) %>%
#view()
ungroup() %>%
group_by(subj) %>%
tally()   # 3 infants, 279, 129, 268
View(toexclude)
vmscount %>%
group_by(subj, month_chron, Consonant)
vmscount %>%
group_by(subj, Consonant)
vmscount %>%
group_by(subj, Consonant) %>%
summarise(totalprod = sum(n))
vmscount %>%
group_by(subj, Consonant)
vmscount %>%
group_by(subj, Consonant, inREP) %>%
summarise(totalprod = sum(n)) %>%
filter
vmscount %>%
group_by(subj, Consonant, inREP) %>%
summarise(totalprod = sum(n)) %>%
filter(subj %in% toexclude$subj & inREP == T)
vmscount %>%
group_by(subj, Consonant, inREP) %>%
summarise(totalprod = sum(n)) %>%
filter(subj %in% toexclude$subj & inREP == T & totalprod < 50)
ProdData_subset <- ProdData %>%
filter(!subj %in% toexclude$subj)
View(ProdData_subset)
vmstotal_subset <- vmstotal %>%
filter(!subj %in% toexclude$subj)
shapiro.test(vmstotal_subset$audiotokens) # not normal
wilcox.test(subset(vmstotal_subset, VMSgroup == "withVMS")$audiotokens, subset(vmstotal_subset, VMSgroup == "noVMS")$audiotokens, conf.int=T) # p<.001
cliff.delta(d = subset(vmstotal_subset, VMSgroup == "withVMS")$audiotokens,
f = subset(vmstotal_subset, VMSgroup == "noVMS")$audiotokens)   # .99 large
library(tidyverse)
library(effsize)
library(rcompanion)
cliff.delta(d = subset(vmstotal_subset, VMSgroup == "withVMS")$audiotokens,
f = subset(vmstotal_subset, VMSgroup == "noVMS")$audiotokens)   # .99 large
shapiro.test(vmstotal_subset$audiotypes) # not normal
wilcox.test(subset(vmstotal_subset, VMSgroup == "withVMS")$audiotypes, subset(vmstotal_subset, VMSgroup == "noVMS")$audiotypes, conf.int=T) # p<.001
cliff.delta(d = subset(vmstotal_subset, VMSgroup == "withVMS")$audiotypes,
f = subset(vmstotal_subset, VMSgroup == "noVMS")$audiotypes)   # .74 large
wilcox.test(subset(ProdData_subset, VMSgroup == "withVMS")$CPtokens, subset(ProdData_subset, VMSgroup == "noVMS")$CPtokens, conf.int=T) # p<.001
cliff.delta(d = subset(ProdData_subset, VMSgroup == "withVMS")$CPtokens,
f = subset(ProdData_subset, VMSgroup == "noVMS")$CPtokens)   # .68 large
wilcox.test(subset(ProdData, VMSgroup == "withVMS")$CPtypes, subset(ProdData, VMSgroup == "noVMS")$CPtypes, conf.int=T) # p=.06
wilcox.test(subset(ProdData_subset, VMSgroup == "withVMS")$CPtypes, subset(ProdData_subset, VMSgroup == "noVMS")$CPtypes, conf.int=T) # p=.06
cliff.delta(d = subset(ProdData, VMSgroup == "withVMS")$CPtypes,
f = subset(ProdData, VMSgroup == "noVMS")$CPtypes)   # .32 small
cliff.delta(d = subset(ProdData_subset, VMSgroup == "withVMS")$CPtypes,
f = subset(ProdData_subset, VMSgroup == "noVMS")$CPtypes)   # .32 small
compareRecordings_subset <- compareRecordings %>%
filter(!subj %in% toexclude$subj)
compareRecordings.spread_subset <- compareRecordings.spread %>%
filter(!subj %in% toexclude$subj)
shapiro.test(compareRecordings_subset$meanProd) # not normal
wilcox.test(compareRecordings.spread_subset$VMS.Prod.Cong, compareRecordings.spread_subset$VMS.Prod.Incong, paired=T, conf.int=T) # p<.01
wilcoxonPairedR(x = compareRecordings_subset$meanProd,
g = compareRecordings_subset$VMS.Prod.Cong) # r= .63
shapiro.test(ProdData_subset$Prod.Prompt.match.PC)
t.test(Prod.Prompt.match.PC ~ VMSgroup, ProdData_spread)
t.test(Prod.Prompt.match.PC ~ VMSgroup, ProdData_subset)
wilcox.test(subset(ProdData_subset, VMSgroup=="withVMS")$Prod.Prompt.match.PC,
subset(ProdData_subset, VMSgroup=="noVMS")$Prod.Prompt.match.PC, conf.int=T) # p=.11, EstDiff=-.11
cliff.delta(d = subset(ProdData_subset, VMSgroup=="withVMS")$Prod.Prompt.match.PC,
f = subset(ProdData_subset, VMSgroup=="noVMS")$Prod.Prompt.match.PC)   # .28 small
wilcox.test(subset(ProdData_subset, VMSgroup=="withVMS" & !subj %in% c(279, 129, 268))$Prod.Prompt.match.PC,
subset(ProdData_subset, VMSgroup=="noVMS")$Prod.Prompt.match.PC, conf.int=T) # p=.09, EstDiff=-.13
source("Data_scrambling_randsubj.R")
data.scrambled_subset <- data.scrambled %>%
filter(!subj %in% toexclude$subj)
prompt.scramble <- data.scrambled_subset %>%
ungroup() %>%
select(subj, month, VMSgroup, Prod.Prompt.match.PC) %>%
rename(PC = Prod.Prompt.match.PC) %>%
mutate(Type = 'Scrambled')
scramble.comparison.prompt <- rbind(prompt.real, prompt.scramble)
prompt.real <- ProdData_subset %>%
select(subj, month, VMSgroup, Prod.Prompt.match.PC) %>%
ungroup() %>%
rename(PC = Prod.Prompt.match.PC) %>%
mutate(Type = 'Real')
scramble.comparison.prompt <- rbind(prompt.real, prompt.scramble)
shapiro.test(scramble.comparison.prompt$PC) # not normal
wilcox.test(subset(prompt.real, VMSgroup == "withVMS")$PC,
subset(prompt.scramble, VMSgroup == "withVMS")$PC, conf.int = T) # Significant, p<.001
cliff.delta(d = subset(prompt.real, VMSgroup == "withVMS")$PC,
f = subset(prompt.scramble, VMSgroup == "withVMS")$PC)   # .90 large
wilcox.test(subset(prompt.real, VMSgroup == "noVMS")$PC,
subset(prompt.scramble, VMSgroup == "noVMS")$PC, conf.int = T) # Significant, p<.05
cliff.delta(d = subset(prompt.real, VMSgroup == "noVMS")$PC,
f = subset(prompt.scramble, VMSgroup == "noVMS")$PC)   # .45 medium
match.data.Prompt.spread_subset <- match.data.Prompt.spread %>%
filter(!subj %in% toexclude$subj)
match.data.Prompt_subset <- match.data.Prompt %>%
filter(!subj %in% toexclude$subj)
match.data.Object_subset <- match.data.Object %>%
filter(!subj %in% toexclude$subj)
match.data.Object.spread_subset <- match.data.Object.spread %>%
filter(!subj %in% toexclude$subj)
#since value of PC for noVMS is all NA, no need to even subset
shapiro.test(subset(match.data.Prompt_subset, VMSgroup=="withVMS")$PC) #normal
t.test(subset(match.data.Prompt.spread_subset, VMSgroup=="withVMS")$inREP,
subset(match.data.Prompt.spread_subset, VMSgroup=="withVMS")$outREP, conf.int=T, paired = T) # p<.001
wilcox.test(subset(match.data.Prompt.spread_subset, VMSgroup=="withVMS")$inREP,
subset(match.data.Prompt.spread_subset, VMSgroup=="withVMS")$outREP, conf.int=T, paired = T) # p=.001, Est.Diff=.34
wilcoxonPairedR(x = subset(match.data.Prompt_subset, VMSgroup == "withVMS")$PC,
g = subset(match.data.Prompt_subset, VMSgroup == "withVMS")$Type) # r= .67
shapiro.test(subset(match.data.Prompt_subset, Type=='outREP')$PC)#normal
t.test(PC ~ VMSgroup, subset(match.data.Prompt_subset, Type=='outREP'), conf.int=T)
wilcox.test(subset(match.data.Prompt_subset, VMSgroup == "withVMS" & Type == "outREP")$PC,
subset(match.data.Prompt_subset, VMSgroup == "noVMS" & Type == "outREP")$PC, conf.int = T) # ns
cliff.delta(d = subset(match.data.Prompt_subset, VMSgroup == "withVMS" & Type == "outREP")$PC,
f = subset(match.data.Prompt_subset, VMSgroup == "noVMS" & Type == "outREP")$PC)   # -.06 negligible
wilcox.test(subset(ProdData_subset, VMSgroup == "withVMS")$Prod.Obj.match.PC,
subset(ProdData_subset, VMSgroup == "noVMS")$Prod.Obj.match.PC, conf.int = T) # p<.01
cliff.delta(d = subset(ProdData_subset, VMSgroup == "withVMS")$Prod.Obj.match.PC,
f = subset(ProdData, VMSgroup == "noVMS")$Prod.Obj.match.PC)   # .46 medium
obj.real <- ProdData_subset %>%
select(subj, month, VMSgroup, Prod.Obj.match.PC) %>%
ungroup() %>%
rename(PC = Prod.Obj.match.PC) %>%
mutate(Type = 'Real')
obj.scramble <- data.scrambled_subset %>%
ungroup() %>%
select(subj, month, VMSgroup, Prod.Obj.match.PC) %>%
rename(PC = Prod.Obj.match.PC) %>%
mutate(Type = 'Scrambled')
scramble.comparison.object <- rbind(obj.real, obj.scramble)
scramble.comparison.object %>% group_by(Type, VMSgroup) %>% summarise(meanscramble = mean(PC, na.rm=T),
sdscramble = sd(PC, na.rm=T))
shapiro.test(scramble.comparison.object$PC) # not normal
wilcox.test(subset(obj.real, VMSgroup == "withVMS")$PC,
subset(obj.scramble, VMSgroup == "withVMS")$PC, conf.int = T) # p<.001
cliff.delta(d = subset(obj.real, VMSgroup == "withVMS")$PC,
f = subset(obj.scramble, VMSgroup == "withVMS")$PC)   # .61 large
wilcox.test(subset(obj.real, VMSgroup == "noVMS")$PC,
subset(obj.scramble, VMSgroup == "noVMS")$PC, conf.int = T) # ns
cliff.delta(d = subset(obj.real, VMSgroup == "noVMS")$PC,
f = subset(obj.scramble, VMSgroup == "noVMS")$PC)   # <.01 negligible
knitr::opts_chunk$set(echo = TRUE)
shapiro.test(subset(match.data.Object, VMSgroup=="withVMS")$PC)
shapiro.test(subset(match.data.Object_subset, VMSgroup=="withVMS")$PC) # normal
wilcox.test(subset(match.data.Object.spread_subset, VMSgroup=="withVMS")$inREP,
subset(match.data.Object.spread_subset, VMSgroup=="withVMS")$outREP, conf.int=T, paired = T) # p=.056, Est Diff = .32
wilcoxonPairedR(x = subset(match.data.Object_subset, VMSgroup == "withVMS")$PC,
g = subset(match.data.Object_subset, VMSgroup == "withVMS")$Type) # r= .42
wilcox.test(subset(match.data.Object_subset, VMSgroup == "withVMS" & Type == "outREP")$PC,
subset(mamatch.data.Object_subset, VMSgroup == "noVMS" & Type == "outREP")$PC, conf.int = T) # ns
wilcox.test(subset(match.data.Object_subset, VMSgroup == "withVMS" & Type == "outREP")$PC,
subset(mamatch.data.Object_subset, VMSgroup == "noVMS" & Type == "outREP")$PC, conf.int = T) # ns
wilcox.test(subset(match.data.Object_subset, VMSgroup == "withVMS" & Type == "outREP")$PC,
subset(match.data.Object_subset, VMSgroup == "noVMS" & Type == "outREP")$PC, conf.int = T) # ns
cliff.delta(d = subset(match.data.Object_subset, VMSgroup == "withVMS" & Type == "outREP")$PC,
f = subset(match.data.Object_subset, VMSgroup == "noVMS" & Type == "outREP")$PC) # .13 negligible
wilcox.test(audiotokens ~ month, vmstotal) # ns p=.754
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(readr)
library(forcats)
library(effsize)
library(rcompanion)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
source("ProductionData_randsubj.R")
source("Data_scrambling_randsubj.R")
vmscount %>% filter(month_chron == 10) %>%
mutate(criterion1 = ifelse(n > 49, T, F)) %>%
filter(criterion1 == T) %>% group_by(subj) %>%
tally() %>%
ungroup() %>%
tally()   # 13 infants
vmscount %>% filter(subj %in% vmssubset1$subj & VMSgroup == "withVMS") %>%
ungroup() %>%
summarise(meantotal = mean(totalprod), # 178.54
sdtotal = sd(totalprod),     # 75.99
mintotal = min(totalprod),   # 86
maxtotal = max(totalprod))   # 412
vmscount %>% filter(month_chron == 10) %>%
mutate(criterion2 = ifelse(n < 20, T, F)) %>%
filter(criterion2 == T) %>% group_by(subj) %>%
tally() %>%
filter(n == 5) %>%
tally()   # 14 infants had no stable consonants
vmscount %>% filter(subj %in% vmssubset1$subj & VMSgroup == "noVMS") %>%
ungroup() %>%
summarise(meantotal = mean(totalprod), # 8.5
sdtotal = sd(totalprod),     # 8.46
mintotal = min(totalprod),   # 0
maxtotal = max(totalprod))   # 28
vmscount %>% filter(month_chron == 10) %>%
mutate(criterion3 = ifelse(n > 19 & n < 50 & subj %in% vms_subset2$subj, T, F)) %>%
filter(criterion3 == T) %>%
group_by(subj) %>%
mutate(PC = n/totalprod) %>%
ungroup() %>%
summarise(meanN = mean(n),  # 29.5
sdN = sd(n),         # 8.64
minN = min(n),       # 20
maxN = max(n),       # 48
meanPC = mean(PC),   # .5
sdPC = sd(PC),       # .17
minPC = min(PC),     # .23
maxPC = max(PC))     # .9
vmscount %>%
group_by(subj, VMSgroup, month_chron, n) %>%
filter(subj %in% vms_subset2$subj &
month_chron == 11 &
n < 20) %>%
ungroup() %>%
group_by(subj) %>%
tally() %>%
filter(n == 5) # 6 infants
vmscount %>%
group_by(subj, VMSgroup, month_chron, n) %>%
filter(subj %in% vms_subset2$subj &
month_chron == 11 &
n > 50) %>%
ungroup() %>%
group_by(subj) %>%
tally() # 8 infants
vmscount %>%
group_by(subj, VMSgroup, month_chron, n) %>%
filter(subj %in% vms_subset2$subj &
month_chron == 11 &
n < 50 & n >19 &
inREP == T) %>%
#view()
ungroup() %>%
group_by(subj) %>%
tally()   # 3 infants, 279, 129, 268
vmscount %>%
filter(subj %in% c(279, 129, 268) & inREP == T) %>%
group_by(subj, Consonant) %>%
summarise(totalN = sum(n)) # all >50 productions
vmstotal %>% group_by(sex) %>% filter(month == 10 & VMSgroup == "withVMS") %>% tally() # 13(5)
vmstotal %>% group_by(sex) %>% filter(month == 11 & VMSgroup == "withVMS") %>% tally() # 11(8)
vmstotal %>% group_by(sex) %>% filter(month == 10 & VMSgroup == "noVMS") %>% tally() # 14(5)
vmstotal %>% group_by(sex) %>% filter(month == 11 & VMSgroup == "noVMS") %>% tally() # 6(3)
vmstotal %>% group_by(sex) %>% filter(month == 11) %>% tally() # 17(11)
vmstotal %>% filter(VMSgroup == "withVMS") %>% group_by(sex) %>% tally() #24
vmscount %>% filter(Group == "Multi") %>% group_by(subj, VMS, sex) %>% tally() #11
vmscount %>% filter(Group == "One") %>% group_by(subj, VMS, sex) %>% tally() #13
vmstotal %>% filter(VMSgroup == "noVMS") %>% group_by(sex) %>% tally() #20 (8)
vmstotal %>% filter(VMS == "p b") %>% group_by(sex) %>% tally() # 8 (6)
vmstotal %>% filter(VMS == "t d") %>% group_by(sex) %>% tally() # 4 (1)
vmstotal %>% filter(VMS == "k g") %>% group_by(sex) %>% tally() # 1 (0)
vmstotal %>% filter(VMS == "p b m") %>% group_by(sex) %>% tally() # 1 (0)
vmstotal %>% filter(VMS == "p b t d") %>% group_by(sex) %>% tally() # 1 (1)
vmstotal %>% filter(VMS == "p b k g") %>% group_by(sex) %>% tally() # 4(2)
vmstotal %>% filter(VMS == "t d k g") %>% group_by(sex) %>% tally() # 2(1)
vmstotal %>% filter(VMS == "t d n") %>% group_by(sex) %>% tally() # 1(1)
vmstotal %>% filter(VMS == "p b t d n") %>% group_by(sex) %>% tally() # 1(0)
vmstotal %>% filter(VMS == "p b t d k g") %>% group_by(sex) %>% tally() # 1 (1)
vmstotal %>% group_by(month) %>% tally()
vmstotal %>% group_by(VMSgroup) %>% filter(month == 10) %>% tally()
vmstotal %>% group_by(VMSgroup) %>% filter(month == 11) %>% tally()
CPdata %>% tally() # 1916 CPs
CPdata %>% filter(cgprompt != "[none]" &
cgprompt != "[unclear]" &
cgprompt != "[unavailable]" &
cgprompt != "[imitation]" &
cgprompt != "[media]") %>%
tally() # 976
976/1916 # 51%
CPdata %>% filter(wordclass != "[none]") %>% tally() # 976
CPdata %>% filter(wordclass == "N") %>% tally() # 720
CPdata %>% filter(wordclass != "N" & wordclass != "[none]") %>% tally() # 720
720/976  # 74%
CPdata %>% group_by(subj) %>%
filter(!grepl("^\\[",cgprompt)) %>%
tally() %>%
summarise(meanobj = mean(n),  # 22.18
sdobj = sd(n))      # 19.03
CPdata %>% filter(object != "[none]" & object != "[unclear]" & object != "[out of view]") %>% tally() # 1179
1179/1916 # 62%
CPdata %>% filter(object == "[toy]") %>% tally() # 78
1179-78 # 1101
CPdata %>% group_by(subj) %>%
filter(!grepl("^\\[",object)) %>%
tally() %>%
summarise(meanobj = mean(n),  # 25.58
sdobj = sd(n))      # 23.37
CPdata %>% filter(!grepl("^\\[",cgprompt) & C1Prompt == "none") %>% tally()  # 40 instances of CGprompts with no supraglottal consonant
CPdata %>% filter(!grepl("^\\[", object) & C1Obj == "none") %>% tally()  # 58 instances of Objects with no supraglottal consonant
1916 - (40+58) # 1818
(40+58)/1916 # 5%
wilcox.test(audiotokens ~ month, vmstotal) # ns p=.754
wilcox.test(audiotokens ~ sex, vmstotal) # ns p=.495
cor.test(vmstotal$MOTedulevel, vmstotal$audiotokens, method = 'spearman') # ns p=.302
wilcox.test(audiotypes ~ sex, vmstotal) # ns, p=.699
wilcox.test(audiotypes ~ month, vmstotal) #ns, p=.276
cor.test(vmstotal$MOTedulevel, vmstotal$audiotypes, method = 'spearman') # ns p=.26
